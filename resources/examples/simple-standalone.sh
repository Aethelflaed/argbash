#!/bin/bash

# ARG_POSITIONAL_SINGLE([filename])
# ARG_OPTIONAL_SINGLE([unit],[u],[What unit we accept (b for bytes, k for kilobytes, M for megabytes)],[b])
# ARG_VERSION([echo $0 v0.1])
# ARG_OPTIONAL_BOOLEAN([verbose])
# ARG_HELP()
# ARGBASH_GO()
# needed because of Argbash --> m4_ignore([
### START OF CODE GENERATED BY ARGBASH v1.3.0 one line above ###
# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, know your rights: https://github.com/matejak/argbash

# THE DEFAULTS INITIALIZATION --- POSITIONALS
# THE DEFAULTS INITIALIZATION --- OPTIONALS
_ARG_UNIT="b"
_ARG_VERBOSE=off

# THE PRINT HELP FUNCION
print_help ()
{
	printf "Usage: $0 [-u|--unit <arg>] [-v|--version] [--(no-)verbose] [-h|--help] <filename>\n"
	printf "\t-u,--unit: What unit we accept (b for bytes, k for kilobytes, M for megabytes) (default: '"b"')\n"
	printf "\t-v,--version: Prints version\n"
	printf "\t-h,--help: Prints help\n"
}

# THE PARSING ITSELF
while test $# -gt 0
do
	_key="$1"
	case "$_key" in
		-u|--unit)
			test $# -lt 2 && { echo "Missing value for the optional argument '$_key'." >&2; exit 1; }
			_ARG_UNIT="$2"

			shift
			;;
		-v|--version)
			echo $0 v0.1
			exit 0
			;;
		--no-verbose|--verbose)
			_ARG_VERBOSE="on"

			test "${1:0:5}" = "--no-" && _ARG_VERBOSE="off"
			;;
		-h|--help)
			print_help
			exit 0
			;;
		*)
			POSITIONALS+=("$1")
			;;
	esac
	shift
done

POSITIONAL_NAMES=('_ARG_FILENAME' )
test ${#POSITIONALS[@]} -lt 1 && { ( echo "FATAL ERROR: Not enough positional arguments --- we require exactly 1, but got only ${#POSITIONALS[@]}."; print_help ) >&2; exit 1; }
test ${#POSITIONALS[@]} -gt 1 && { ( echo "FATAL ERROR: There were spurious positional arguments --- we expect exactly 1, but got ${#POSITIONALS[@]} (the last one was: '${POSITIONALS[@]: -1}')."; print_help ) >&2; exit 1; }
for (( ii = 0; ii < ${#POSITIONALS[@]}; ii++))
do
	eval "${POSITIONAL_NAMES[$ii]}=\"${POSITIONALS[$ii]}\"" || { echo "Error during argument parsing, possibly an Argbash bug." >&2; exit 1; }
done

# OTHER STUFF GENERATED BY Argbash

### END OF CODE GENERATED BY Argbash (sortof) ### ])
